// Code generated by mockery v2.43.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Geocoder is an autogenerated mock type for the Geocoder type
type Geocoder struct {
	mock.Mock
}

// GetCoordsByName provides a mock function with given fields: city
func (_m *Geocoder) GetCoordsByName(city string) (float64, float64, error) {
	ret := _m.Called(city)

	if len(ret) == 0 {
		panic("no return value specified for GetCoordsByName")
	}

	var r0 float64
	var r1 float64
	var r2 error
	if rf, ok := ret.Get(0).(func(string) (float64, float64, error)); ok {
		return rf(city)
	}
	if rf, ok := ret.Get(0).(func(string) float64); ok {
		r0 = rf(city)
	} else {
		r0 = ret.Get(0).(float64)
	}

	if rf, ok := ret.Get(1).(func(string) float64); ok {
		r1 = rf(city)
	} else {
		r1 = ret.Get(1).(float64)
	}

	if rf, ok := ret.Get(2).(func(string) error); ok {
		r2 = rf(city)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// NewGeocoder creates a new instance of Geocoder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewGeocoder(t interface {
	mock.TestingT
	Cleanup(func())
}) *Geocoder {
	mock := &Geocoder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
